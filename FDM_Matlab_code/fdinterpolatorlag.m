function Eout=fdinterpolatorlag(rce,xval,rv,ncell,dcell,rs,js)
%%%old version would interpolate Einc, its faster and better
%Eout(:,1) = interpn(reshape(rce(:,1),ncell+1),...
%                    reshape(rce(:,2),ncell+1),...
%                    reshape(rce(:,3),ncell+1),...
%                    reshape(Einc(1,:,:,:),ncell+1),...
%                    rv(:,1),rv(:,2),rv(:,3),'spline');
%Eout(:,2) = interpn(reshape(rce(:,1),ncell+1),...
%                    reshape(rce(:,2),ncell+1),...
%                    reshape(rce(:,3),ncell+1),...
%                    reshape(Einc(2,:,:,:),ncell+1),...
%                    rv(:,1),rv(:,2),rv(:,3),'spline');
%Eout(:,3) = interpn(reshape(rce(:,1),ncell+1),...
%                    reshape(rce(:,2),ncell+1),...
%                    reshape(rce(:,3),ncell+1),...
%                    reshape(Einc(3,:,:,:),ncell+1),...
%                    rv(:,1),rv(:,2),rv(:,3),'spline');
%%%%%
Eout=computeEprimary(rs,js,numel(rs)/3,rv',numel(rv)/3).';
fn=@(x,y,z)[ (1-x)*(1-y)*(1-z);...
             (  x)*(1-y)*(1-z);...
             (1-x)*(  y)*(1-z);...
             (  x)*(  y)*(1-z);...
             (1-x)*(1-y)*(  z);...
             (  x)*(1-y)*(  z);...
             (1-x)*(  y)*(  z);...
             (  x)*(  y)*(  z)];


gradfn=@(x,y,z)[ -(1-y)*(1-z),-(1-x)*(1-z),-(1-x)*(1-y);...
                  (1-y)*(1-z),-(x  )*(1-z),-(x  )*(1-y);...
                 -(  y)*(1-z), (1-x)*(1-z),-(1-x)*(  y);...
                  (  y)*(1-z), (x  )*(1-z),-(x  )*(  y);...
                 -(1-y)*(  z),-(1-x)*(  z), (1-x)*(1-y);...
                  (1-y)*(  z),-(x  )*(  z), (x  )*(1-y);...
                 -(  y)*(  z), (1-x)*(  z), (1-x)*(  y);...
                  (  y)*(  z), (x  )*(  z), (x  )*(  y)];
n=ncell;
ival=1:8;
ti=mod(ival-1,2);
tj=mod(floor(ival/2.2),2);
tk=mod(floor(ival/5),2);
ishift=ti+tj*(n(1)+1)+tk*(n(1)+1)*(n(2)+1);
globind=@(i,j,k) i+(j-1)*(n(1)+1)+(k-1)*(n(1)+1)*(n(2)+1);
   
icell=(rv(:,1)-min(rce(:,1)))/dcell(1);
jcell=(rv(:,2)-min(rce(:,2)))/dcell(2);
kcell=(rv(:,3)-min(rce(:,3)))/dcell(3);
for i=1:numel(icell)
    if  ceil(icell(i))<=n(1) && ceil(jcell(i))<=n(2) && ceil(kcell(i))<=n(3)
gradv=gradfn(icell(i)-floor(icell(i)),...
             jcell(i)-floor(jcell(i)),...
             kcell(i)-floor(kcell(i)));
v=fn(icell(i)-floor(icell(i)),...
             jcell(i)-floor(jcell(i)),...
             kcell(i)-floor(kcell(i)));
tempval=globind(ceil(icell(i)),ceil(jcell(i)),ceil(kcell(i)));
Eout(i,1)=Eout(i,1)-gradv(:,1)'*xval(tempval+ishift(:))/dcell(1);
Eout(i,2)=Eout(i,2)-gradv(:,2)'*xval(tempval+ishift(:))/dcell(2);
Eout(i,3)=Eout(i,3)-gradv(:,3)'*xval(tempval+ishift(:))/dcell(3);
    end
end
Eout=real(Eout).';
end
